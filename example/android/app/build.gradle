def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.suprsend.suprsend_flutter_sdk_example"
        minSdkVersion 19
        targetSdkVersion 33
        compileSdkVersion 33

        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        buildConfigField "String", "SS_API_KEY", localProperties['SS_API_KEY']
        buildConfigField "String", "SS_API_SECRET", localProperties['SS_API_SECRET']

        buildConfigField "String", "XIAOMI_APP_ID", localProperties['XIAOMI_APP_ID']
        buildConfigField "String", "XIAOMI_API_KEY", localProperties['XIAOMI_API_KEY']
    }

    buildTypes {
        debug {
            debuggable true
            buildConfigField "String", "SS_API_BASE_URL", localProperties['SS_API_BASE_URL_STAGING']
            signingConfig signingConfigs.debug
        }
        release {
            debuggable false
            buildConfigField "String", "SS_API_BASE_URL", localProperties['SS_API_BASE_URL_PROD']

            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // // Add this for Android Push notification support
    implementation "com.google.firebase:firebase-messaging:23.0.2"
    implementation fileTree(dir: "libs", include: ["*.jar","*.aar"])
}
